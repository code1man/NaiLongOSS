<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.csu.demo.persistence.UserDao">


  <update id="updateUserPassword">
        UPDATE userinfo
        SET password = #{password}
        WHERE id = #{id};
    </update>

    
    <select id="findByUsername" resultType="org.csu.demo.domain.User">
            SELECT * FROM userinfo WHERE username = #{username}
    </select>

    <select id="getUserByUsernameAndPassword" resultType="org.csu.demo.domain.User">
        select * from userinfo where username = #{username} and password = #{password}
    </select>

    <!-- 查询所有用户，返回 List<User> -->
    <select id="getAllUsers" resultType="org.csu.demo.domain.User">
        SELECT * FROM userinfo;
    </select>

    <!-- 通过 ID 查询单个用户 -->
    <select id="getUser" parameterType="int" resultType="org.csu.demo.domain.User">
        SELECT * FROM userinfo WHERE id = #{id};
    </select>

    <!-- 添加用户 -->
    <insert id="addUser" parameterType="org.csu.demo.domain.User">
        INSERT INTO userinfo (username, password, email, age, responsibility)
        VALUES (#{username}, #{password}, #{email}, #{age}, #{responsibility});
    </insert>


    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="org.csu.demo.domain.User">
        UPDATE userinfo
        SET username = #{username},
            password = #{password},
            email = #{email},
            age = #{age}
        WHERE id = #{id};
    </update>



    <!-- 通过用户名查询用户 -->
    <select id="getUserByUsername" parameterType="string" resultType="org.csu.demo.domain.User">
        SELECT * FROM userinfo WHERE username = #{username};
    </select>

    <!-- 通过id删除用户 -->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM userinfo WHERE id = #{id}
    </delete>
    <!-- 通过用户名查询用户ID -->
    <select id="getUserIdByUsername" parameterType="String" resultType="int">
        SELECT id FROM userinfo WHERE username = #{username};
    </select>

      <!-- 获取所有用户的完整信息，包括状态和商家信息 -->
    <select id="getAllUsersWithDetails" resultType="org.csu.demo.domain.User">
        SELECT 
            u.*,
            us.is_frozen,
            us.is_online,
            us.frozen_reason,
            m.credit as merchant_credit
        FROM userinfo u
        LEFT JOIN user_status us ON u.id = us.id
        LEFT JOIN merchant m ON u.id = m.id
        ORDER BY u.id;
    </select>
</mapper>